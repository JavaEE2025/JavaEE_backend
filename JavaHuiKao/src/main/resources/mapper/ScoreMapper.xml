<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.buaa.javahuikao.mapper.ScoreMapper">
    <select id="getExcellentLine" resultType="java.lang.Float">
        select sum_score*0.85
        from exams
        where id=#{examId}
    </select>

    <resultMap id="AllScoreMap" type="com.buaa.javahuikao.dto.AllScoreDTO">
        <result column="avg_score" property="average" />
        <result column="max_score" property="max_score" />
        <result column="min_score" property="min_score" />
        <result column="excellent_rate" property="excellent_proportion" />
    </resultMap>

    <select id="getScoreInfo" resultMap="AllScoreMap">
        SELECT
            AVG(sum_score) AS avg_score,
            MAX(sum_score) AS max_score,
            MIN(sum_score) AS min_score,
            ROUND(
                    100.0 * COUNT(CASE WHEN sum_score > #{excellentLine} THEN 1 END) / COUNT(*),
                    1
            ) AS excellent_rate
        FROM
            student_answers
        WHERE
            exam_id = #{examId}
            AND status != '缺考'
    </select>

    <resultMap id="ScoreMap" type="com.buaa.javahuikao.dto.ScoreDTO">
        <result column="id" property="id" />
        <result column="className" property="className" />
        <result column="name" property="name" />
        <result column="score" property="score" />
        <result column="rank" property="rank" />
    </resultMap>

    <select id="getEachScore" resultMap="ScoreMap">
        SELECT
            sa.student_id AS id,
            u.username AS name,
            class.name AS className,
            sa.sum_score AS score,
            RANK() OVER (
                PARTITION BY sa.exam_id
                ORDER BY sa.sum_score DESC
            ) AS `rank`
        FROM
            student_answers as sa,users as u,classes as class
        WHERE
            sa.exam_id = #{examId}
            AND sa.status != '缺考'
            AND sa.student_id = u.id
            AND u.student_class_id=class.id
        ORDER BY
            sa.sum_score DESC;
    </select>

    <select id="getWrongQuestionData" resultType="java.util.Map">
        <![CDATA[
            SELECT
                CONCAT(
                        CASE
                            WHEN q.type ='single' THEN '单选'
                            WHEN q.type ='multiple' THEN '多选'
                            WHEN q.type = 'fill' THEN '填空'
                            WHEN q.type = 'answer' THEN '主观'
                            END,
                        '第',
                        eq.number,
                        '题'
                ) AS question,
                COUNT(sac.student_id) AS count
            FROM
                student_answers_content as sac
                JOIN
                exam_question as eq ON sac.question_id = eq.question_id AND sac.exam_id = eq.exam_id
                JOIN
                questions as q ON eq.question_id = q.id
            WHERE
                sac.exam_id = #{examId}
              AND sac.score < eq.score
            GROUP BY
                eq.question_id
            ORDER BY
                eq.number
            ]]>
    </select>

    <resultMap id="InfoMap" type="com.buaa.javahuikao.dto.ReportDTO">
        <result column="exam_name" property="exam_name" />
        <result column="exam_time" property="exam_time" />
        <result column="exam_duration" property="exam_duration" />
        <result column="student_name" property="student_name" />
        <result column="totalScore" property="totalScore" />
        <result column="sum_score" property="sum_score" />
    </resultMap>

    <select id="getDetailInfo" resultMap="InfoMap">
        select users.username as student_name,
               exams.name as exam_name,
               exams.start_time as exam_time,
               exams.duration as exam_duration,
               exams.sum_score as sum_score,
               sa.sum_score as totalScore
        from users,student_answers as sa
        JOIN exams ON sa.exam_id=exams.id
        where sa.exam_id=#{examId}
        AND sa.student_id=#{studentId}
        AND sa.student_id=users.id
    </select>

    <!--单选:
        private int id;
        private Boolean hasCorrect;
        private String topic;
        private String comment;
        private String correct_answer;
        private String image;
        private String type;
        private double score;
        private double totalScore;
        private String answer;  //单选专用
        private List<String> answers; //多选专用
        private List<String> selecteds;  //多选专用
        private String selected; //单选
        private double classRate;
        private double yourRate;
        private List<OptionContent> options;
    -->
    <resultMap id="SingleMap" type="com.buaa.javahuikao.dto.QuestionsDTO">
        <id column="id" property="id" />
        <result column="topic" property="topic" />
        <result column="parse" property="parse" />
        <result column="image" property="image" />
        <result column="type" property="type" />
        <result column="score" property="score" />
        <result column="totalScore" property="totalScore" />
        <result column="answer" property="answer" />
        <result column="selected_letter" property="selected" />
        <result column="class_rate" property="classRate" />
        <result column="yourRate" property="yourRate" />
        <result column="hasCorrect" property="hasCorrect" />
        <collection property="options" ofType="com.buaa.javahuikao.dto.QuestionsDTO$OptionContent">
            <result column="optionContent" property="content" />
        </collection>
    </resultMap>

    <select id="getSingleQuestion" resultMap="SingleMap">
        select eq.number as id,
               qs.topic as topic,
               qs.parse as parse,
               sac.img_answer as image,
               qs.type as type,
               sac.score as score,
               eq.score as totalScore,
               qs.correct_answer as answer,
               ROUND(
                       AVG(sac.score) OVER (PARTITION BY eq.exam_id, qs.id) / eq.score * 100,
                       1
               ) AS class_rate,
               ROUND((sac.score / eq.score) * 100, 1) AS yourRate,
               os.option AS optionContent,
               CASE
                   WHEN os.id = MIN(os.id) OVER (PARTITION BY qs.id) THEN 'A'
                   WHEN os.id = MIN(os.id) OVER (PARTITION BY qs.id) + 1 THEN 'B'
                   WHEN os.id = MIN(os.id) OVER (PARTITION BY qs.id) + 2 THEN 'C'
                   WHEN os.id = MIN(os.id) OVER (PARTITION BY qs.id) + 3 THEN 'D'
               END AS selected_letter,
               CASE
                   WHEN sac.score!=eq.score THEN false
                   ELSE true
               END AS hasCorrect
        from questions as qs
        JOIN student_answers_content as sac ON qs.id=sac.question_id
        JOIN exam_question as eq ON eq.exam_id=sac.exam_id
        JOIN options as os ON sac.question_id=os.question_id
        where sac.exam_id=#{examId}
              AND sac.student_id=#{studentId}
              AND qs.type='single'
              AND eq.question_id=sac.question_id
        ORDER BY
              eq.number,
              os.id;
    </select>

    <!--    多选-->
    <resultMap id="MultipleMap" type="com.buaa.javahuikao.dto.QuestionsDTO">
        <id column="question_id" property="question_id" />
        <id column="id" property="id" />
        <result column="topic" property="topic" />
        <result column="parse" property="parse" />
        <result column="image" property="image" />
        <result column="type" property="type" />
        <result column="score" property="score" />
        <result column="totalScore" property="totalScore" />
        <result column="class_rate" property="classRate" />
        <result column="yourRate" property="yourRate" />
        <result column="hasCorrect" property="hasCorrect" />
        <collection property="answers" ofType="java.lang.String">
            <result column="correct_answer_split" property="answers" />
        </collection>
        <collection property="selecteds" ofType="java.lang.String">
            <result column="selected_letter" property="selecteds" />
        </collection>
    </resultMap>

    <select id="getMultipleQuestion" resultMap="MultipleMap">
        select eq.number as id,
               qs.topic as topic,
               sac.comment as comment,
               qs.parse as parse,
               sac.img_answer as image,
               qs.type as type,
               sac.score as score,
               eq.score as totalScore,
               sac.question_id as question_id,
               ROUND(
                       AVG(sac.score) OVER (PARTITION BY eq.exam_id, qs.id) / eq.score * 100,
                       1
               ) AS class_rate,
               ROUND((sac.score / eq.score) * 100, 1) AS yourRate,
               CASE
                   WHEN sac.score!=eq.score THEN false
                   ELSE true
               END AS hasCorrect,
               SUBSTRING_INDEX(SUBSTRING_INDEX(qs.correct_answer, '、', n.n), '、', -1) AS correct_answer_split,
               -- 学生选择的选项ID转换为字母（1;3;4 → A, C, D）
               CASE
                   WHEN os.id = MIN(os.id) OVER (PARTITION BY qs.id) THEN 'A'
                   WHEN os.id = MIN(os.id) OVER (PARTITION BY qs.id) + 1 THEN 'B'
                   WHEN os.id = MIN(os.id) OVER (PARTITION BY qs.id) + 2 THEN 'C'
                   WHEN os.id = MIN(os.id) OVER (PARTITION BY qs.id) + 3 THEN 'D'
                   END AS selected_letter
        FROM
            questions qs
                JOIN
            student_answers_content sac ON qs.id = sac.question_id
                JOIN
            exam_question eq ON sac.question_id = eq.question_id AND sac.exam_id = eq.exam_id
                JOIN
            options os ON qs.id = os.question_id AND FIND_IN_SET(os.id, REPLACE(sac.option_answer, ';', ',')) > 0
                JOIN (
                -- 用于拆分正确答案的辅助表
                SELECT 1 AS n UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5
            ) n ON CHAR_LENGTH(qs.correct_answer) - CHAR_LENGTH(REPLACE(qs.correct_answer, '、', '')) >= n.n - 1
                JOIN (
                -- 用于拆分学生选择的辅助表
                SELECT 1 AS m UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5
            ) m ON CHAR_LENGTH(sac.option_answer) - CHAR_LENGTH(REPLACE(sac.option_answer, ';', '')) >= m.m - 1
        where sac.exam_id=#{examId}
          AND sac.student_id=#{studentId}
          AND qs.id=sac.question_id
          AND qs.type='multiple'
          AND eq.question_id=sac.question_id
          AND eq.exam_id=sac.exam_id
          AND sac.question_id=os.question_id
        ORDER BY
            eq.number,
            os.id;
    </select>

    <resultMap id="optionMap" type="com.buaa.javahuikao.dto.QuestionsDTO$OptionContent">
        <result column="optionContent" property="content" />
    </resultMap>

    <select id="getOption" resultMap="optionMap">
        SELECT
            os.option AS optionContent
        FROM
            options os
        WHERE
            os.question_id = #{questionId}
        ORDER BY
            os.id
    </select>

    <!--  填空  -->
    <resultMap id="FillMap" type="com.buaa.javahuikao.dto.QuestionsDTO">
        <id column="id" property="id" />
        <result column="topic" property="topic" />
        <result column="comment" property="comment" />
        <result column="correct_answer" property="correct_answer" />
        <result column="parse" property="parse" />
        <result column="type" property="type" />
        <result column="score" property="score" />
        <result column="totalScore" property="totalScore" />
        <result column="class_rate" property="classRate" />
        <result column="yourRate" property="yourRate" />
        <result column="answer" property="answer" />
        <result column="hasCorrect" property="hasCorrect" />
    </resultMap>

    <select id="getFillQuestion" resultMap="FillMap">
        select eq.number as id,
               qs.topic as topic,
               sac.comment as comment,
               qs.correct_answer as correct_answer,
               qs.parse as parse,
               sac.img_answer as image,
               sac.text_answer as answer,
               qs.type as type,
               sac.score as score,
               eq.score as totalScore,
               ROUND(
                       AVG(sac.score) OVER (PARTITION BY eq.exam_id, qs.id) / eq.score * 100,
                       1
               ) AS class_rate,
               ROUND((sac.score / eq.score) * 100, 1) AS yourRate,
               CASE
                   WHEN sac.score!=eq.score THEN false
                   ELSE true
               END AS hasCorrect
        from questions as qs
        JOIN student_answers_content as sac ON qs.id=sac.question_id
        JOIN exam_question as eq ON eq.exam_id=sac.exam_id AND eq.question_id=sac.question_id
        where sac.exam_id=#{examId}
          AND sac.student_id=#{studentId}
          AND qs.type='fill'
        ORDER BY
            eq.number
    </select>

    <!--  简答  -->
    <resultMap id="AnswerMap" type="com.buaa.javahuikao.dto.QuestionsDTO">
        <id column="id" property="id" />
        <result column="topic" property="topic" />
        <result column="comment" property="comment" />
        <result column="correct_answer" property="correct_answer" />
        <result column="parse" property="parse" />
        <result column="type" property="type" />
        <result column="score" property="score" />
        <result column="totalScore" property="totalScore" />
        <result column="class_rate" property="classRate" />
        <result column="yourRate" property="yourRate" />
        <result column="answer" property="answer" />
        <result column="image" property="image" />
        <result column="hasCorrect" property="hasCorrect" />
    </resultMap>

    <select id="getAnswerQuestion" resultMap="AnswerMap">
        select eq.number as id,
               qs.topic as topic,
               sac.comment as comment,
               qs.correct_answer as correct_answer,
               qs.parse as parse,
               sac.img_answer as image,
               sac.text_answer as answer,
               qs.type as type,
               sac.score as score,
               eq.score as totalScore,
               sac.img_answer as image,
               ROUND(
                       AVG(sac.score) OVER (PARTITION BY eq.exam_id, qs.id) / eq.score * 100,
                       1
               ) AS class_rate,
               ROUND((sac.score / eq.score) * 100, 1) AS yourRate,
               CASE
                   WHEN sac.score!=eq.score THEN false
                   ELSE true
               END AS hasCorrect
        from questions as qs
        JOIN student_answers_content as sac ON qs.id=sac.question_id
        JOIN exam_question as eq ON eq.exam_id=sac.exam_id AND eq.question_id=sac.question_id
        where sac.exam_id=#{examId}
          AND sac.student_id=#{studentId}
          AND qs.type='answer'
        ORDER BY
            eq.number
    </select>

</mapper>