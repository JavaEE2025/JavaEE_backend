<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.buaa.javahuikao.mapper.ExamMapper">
    <insert id="insertExam" useGeneratedKeys="true" keyProperty="id" parameterType="com.buaa.javahuikao.entity.Exam">
        INSERT INTO exams
            (name, start_time, duration, marked, sum_score)
        VALUES
            (#{name}, #{startTime}, #{duration}, #{marked}, #{sumScore})
    </insert>

    <insert id="insertExamClasses" parameterType="map">
        INSERT INTO exam_class(exam_id, class_id)
        VALUES
        <foreach collection="classIds" item="classId" separator=",">
            (#{examId}, #{classId})
        </foreach>
    </insert>

    <insert id="insertExamQuestions" parameterType="map">
        INSERT INTO exam_question(exam_id, question_id, number, score)
        VALUES
        <foreach collection="questions" item="question" separator=",">
            (#{examId}, #{question.id}, #{question.number}, #{question.score})
        </foreach>
    </insert>
    
    <select id="getInvolvedStudents" resultType="Integer">
        select u.id
        from users u
        where u.student_class_id in
        <foreach collection="classIds" item="classId" open="(" separator="," close=")">
            #{classId}
        </foreach>
    </select>

    <insert id="initStudentAnswers" parameterType="map">
        INSERT INTO student_answers(exam_id, student_id)
        VALUES
        <foreach collection="studentIds" item="studentId" separator=",">
            (#{examId}, #{studentId})
        </foreach>
    </insert>

    <insert id="initStudentAnswersContent" parameterType="map">
        INSERT INTO student_answers_content(exam_id, question_id, student_id)
        VALUES
            <foreach collection="questions" item="question" separator=",">
                <foreach collection="studentIds" item="studentId" separator=",">
                    (#{examId}, #{question.id}, #{studentId})
                </foreach>
            </foreach>
    </insert>


    <resultMap id="ExamResultMap" type="com.buaa.javahuikao.dto.ExamDTO">
        <id property="id" column="exam_id"/>
        <result property="name" column="exam_name"/>
        <result property="classId" column="class_id"/>
        <result property="className" column="class_name"/>
        <result property="startTime" column="start_time"/>
        <result property="duration" column="duration"/>
        <result property="marked" column="marked"/>
    </resultMap>

    <select id="getTeacherExams" resultMap="ExamResultMap">
        SELECT
            e.id AS exam_id,
            e.name AS exam_name,
            e.start_time,
            e.duration,
            e.marked,
            c.id AS class_id,
            c.name AS class_name
        FROM
            classes c
                JOIN
            exam_class ec ON c.id = ec.class_id
                JOIN
            exams e ON ec.exam_id = e.id
        WHERE
            c.teacher_id = #{userId}
    </select>

    <select id="getStudentExams" resultType="com.buaa.javahuikao.entity.Exam">
        select e.id, e.name, e.start_time, e.duration, e.marked, e.sum_score
        from exams e
        join exam_class ec on e.id = ec.exam_id
        join classes c on ec.class_id = c.id
        join users u on c.id = u.student_class_id
        where u.id = #{userId}
    </select>
    
    <select id="getPendingExams" resultType="com.buaa.javahuikao.entity.Exam">
        select e.id, e.name, e.start_time, e.duration, e.marked, e.sum_score
        from exams e
        join exam_class ec on e.id = ec.exam_id
        join classes c on ec.class_id = c.id
        join users u on c.id = u.student_class_id
        where u.id = #{userId}
        and e.start_time > now()
    </select>
    
    <select id="getOngoingExams" resultType="com.buaa.javahuikao.entity.Exam">
        select e.id, e.name, e.start_time, e.duration, e.marked, e.sum_score
        from exams e
        join exam_class ec on e.id = ec.exam_id
        join classes c on ec.class_id = c.id
        join users u on c.id = u.student_class_id
        where u.id = #{userId}
        and e.start_time &lt;= now()
        and addtime(e.start_time, e.duration) > now()
    </select>

    <select id="getCompletedExams" resultType="com.buaa.javahuikao.entity.Exam">
        select e.id, e.name, e.start_time, e.duration, e.marked, e.sum_score
        from exams e
        join exam_class ec on e.id = ec.exam_id
        join classes c on ec.class_id = c.id
        join users u on c.id = u.student_class_id
        where u.id = #{userId}
        and addtime(e.start_time, e.duration) &lt;= now()
    </select>
</mapper>